EPI F64vec xi:pos
EPI S32    idi:id
EPI S32    idi_dmmy:id_dmmy
EPI F64    routi:r_out
EPI F64    rsearchi:r_search
EPI F64    epi:eps
F32 eps2

EPJ F64vec xj:pos
EPJ S32    idj:id
EPJ S32    idj_dmmy:id_dmmy
EPJ F64    routj:r_out
EPJ F64    rsearchj:r_search
EPJ F64    epj:eps
EPJ F64    mj:mass
EPJ F64vec vj:vel
EPJ F64vec aj_d:acc_d
EPJ S32    id_locj:id_local
EPJ S32    myrankj:myrank

FORCE F32vec af:acc
FORCE F32    pf:phi
FORCE S32    nngb:neighbor
FORCE S32    DUMMY_:DUMMY_
FORCE S32    idngb:id_neighbor
FORCE S32    idngb_dmmy:id_neighbor_dmmy


EPI local F32vec xiloc
EPI local F32    epiloc
EPI local F32    rsearchiloc
EPI local F32    routiloc

EPJ local F32vec xjloc
EPJ local F32    mjloc
EPJ local F32    epjloc
EPJ local F32    rsearchjloc
EPJ local F32    routjloc

xiloc = xi - xi[0]
epiloc = epi
rsearchiloc = rsearchi
routiloc = routi

xjloc = xj - xi[0]
epjloc = epj
mjloc = mj
rsearchjloc = rsearchj
routjloc = routj

rout     = max(routjloc, routiloc)
rsearch  = max(rsearchjloc, rsearchiloc)
rout2    = rout * rout
rsearch2 = rsearch * rsearch * 1.1025f

rij     = xjloc - xiloc
r2_real = rij*rij + epiloc*epjloc
r2      = r2_real
r2      = max(r2_real, rout2)

if r2_real < rsearch2
nngb  = nngb + 1
if idi != idj
idngb = max(idngb, idj)
//idngb = idj
endif
endif

r_inv   = rsqrt(r2)
tmp     = 3.0f - r2*(r_inv*r_inv)
r_inv  *= (tmp * 0.5f)
r2_inv  = r_inv * r_inv
mr_inv  = mjloc * r_inv
mr3_inv = r2_inv * mr_inv

af    += mr3_inv * rij
pf    -= mr_inv
